#!/sbin/sh

# AnyKernel2 Backend Script
#
# Original and credits: osm0sis @ xda-developers
#
# Modified by NachiketNamjoshi

OUTFD=/proc/self/fd/$2;
ZIP="$3";
DIR=`dirname "$ZIP"`;


## internal functions

ui_print() 
{
	until [ ! "$1" ]; do
		echo -e "ui_print $1\nui_print" > $OUTFD;
		shift;
	done;
}

show_progress() 
{
	echo "progress $1 $2" > $OUTFD;
}

set_perm_recursive() 
{
	dirs=$(echo $* | $bb awk '{ print substr($0, index($0,$5)) }');
	
	for i in $dirs; do
		chown -R $1.$2 $i; chown -R $1:$2 $i;
		find "$i" -type d -exec chmod $3 {} +;
		find "$i" -type f -exec chmod $4 {} +;
	done;
}

file_getprop() 
{ 
	grep "^$2" "$1" | cut -d= -f2;
}

getprop()
{ 
	test -e /sbin/getprop && /sbin/getprop $1 || file_getprop /default.prop $1;
}

abort()
{ 
	ui_print " ";
	ui_print "$*";
	umount /system;
	umount /data;
	exit 1;
}


## start of main script

show_progress 1.34 4;
ui_print " ";

mkdir -p /tmp/anykernel/bin;
cd /tmp/anykernel;
unzip -o "$ZIP";

if [ $? != 0 -o -z "$(ls /tmp/anykernel/tools)" ]; then
	abort "Error - unzip failed. Aborting.";
fi;

chmod -R 755 /tmp/anykernel/tools /tmp/anykernel/bin;
bb=/tmp/anykernel/tools/busybox;
ui_print "*************************************************";
ui_print " ";
ui_print "BBBBBBBBBBBBBBBBB        RRRRRRRRRRRRRRRRR   ";
ui_print "B::::::::::::::::B       R::::::::::::::::R  ";
ui_print "B::::::BBBBBB:::::B      R::::::RRRRRR:::::R ";
ui_print "BB:::::B     B:::::B     RR:::::R     R:::::R";
ui_print "  B::::B     B:::::B       R::::R     R:::::R";
ui_print "  B::::B     B:::::B       R::::R     R:::::R";
ui_print "  B::::BBBBBB:::::B        R::::RRRRRR:::::R ";
ui_print "  B:::::::::::::BB         R:::::::::::::RR  ";
ui_print "  B::::BBBBBB:::::B        R::::RRRRRR:::::R ";
ui_print "  B::::B     B:::::B       R::::R     R:::::R";
ui_print "  B::::B     B:::::B       R::::R     R:::::R";
ui_print "  B::::B     B:::::B       R::::R     R:::::R";
ui_print "BB:::::BBBBBB::::::B     RR:::::R     R:::::R";
ui_print "B:::::::::::::::::B      R::::::R     R:::::R";
ui_print "B::::::::::::::::B       R::::::R     R:::::R";
ui_print "BBBBBBBBBBBBBBBBB        RRRRRRRR     RRRRRRR";
ui_print " ";
ui_print "*************************************************";
ui_print "               BLACK REACTOR KERNEL ";
ui_print "*************************************************";
ui_print "            BY NachiketNamjoshi @ XDA";
ui_print "*************************************************";
ui_print " ";
mount -o ro /system;
mount /data;

if [ "$(file_getprop /tmp/anykernel/anykernel.sh do.devicecheck)" == 1 ]; then
	ui_print "[-] Checking device compatibility...";
	ui_print " |- Detected product.device: $(getprop ro.product.device)";
	ui_print " |- Detected build.product : $(getprop ro.build.product)";

	for i in 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15; do
		testname="$(file_getprop /tmp/anykernel/anykernel.sh device.name$i)";
		if [ "$(getprop ro.product.device)" == "$testname" -o "$(getprop ro.build.product)" == "$testname" ]; then
			match=1;
		fi;
	done;

	if [ "$match" != 1 ]; then
		abort "This kernel is NOT compatible with your device. Aborting.";
	else
		ui_print "  Kernel is compatible.";
	fi;

	ui_print " ";
fi;

if [ "$(file_getprop /tmp/anykernel/anykernel.sh do.initd)" == 1 ]; then
	ui_print "[*] Creating init.d...";
	ui_print " ";

	mount -o remount,rw /system;
	mkdir /system/etc/init.d;
	set_perm_recursive 0 0 0755 0755 /system/etc/init.d;
	mount -o remount,ro /system;
fi;

ui_print "[-] Installing kernel...";

for i in $($bb --list); do
	$bb ln -s $bb /tmp/anykernel/bin/$i;
done;

if [ $? != 0 -o -z "$(ls /tmp/anykernel/bin)" ]; then
	abort "[*] Recovery busybox setup failed. Aborting.";
fi;

PATH="/tmp/anykernel/bin:$PATH" $bb ash /tmp/anykernel/anykernel.sh $2;

if [ $? != "0" ]; then
	abort;
fi;

if [ "$(file_getprop /tmp/anykernel/anykernel.sh do.modules)" == 1 ]; then
	ui_print " |- Copying modules...";
	mount -o remount,rw /system;
	mkdir -p /system/lib/modules;
	cp -rf /tmp/anykernel/modules/* /system/lib/modules/;
	set_perm_recursive 0 0 0755 0644 /system/lib/modules;
	mount -o remount,ro /system;
fi;

mount -o remount,rw /system;
ui_print " |- Copying 00BlackReactor...";
cp -f /tmp/anykernel/system/00BlackReactor /system/etc/init.d/00BlackReactor;
chmod 777 /system/etc/init.d/00BlackReactor;
ui_print " |- Adding Ad-blocker..."
rm -rf /system/etc/hosts
cp -f /tmp/anykernel/system/hosts /system/etc/hosts;
chmod 644 /system/etc/hosts;
chown 0:0 /system/etc/hosts;
ui_print " |- Adding setcurr utility...";
cp -f /tmp/anykernel/system/setcurr /system/bin/setcurr;
chmod 777 /system/bin/setcurr;
if [ ! -d /data/BlackReactor ]; then
	ui_print "!! BlackReactor Directory not Found !!";
	ui_print " [*] Creating Directories...";
	mkdir -p /data/BlackReactor;
fi
ui_print "[*]Copying Files..";
cp /tmp/anykernel/system/Balanced.sh /data/BlackReactor/Balanced.sh;
chmod 750 /data/BlackReactor/Balanced.sh;
cp /tmp/anykernel/system/Performance.sh /data/BlackReactor/Performance.sh;
chmod 750 /data/BlackReactor/Performance.sh;
cp /tmp/anykernel/system/Battery.sh /data/BlackReactor/Battery.sh;
chmod 750 /data/BlackReactor/Battery.sh;
cp /tmp/anykernel/system/Gaming.sh /data/BlackReactor/Gaming.sh;
chmod 750 /data/BlackReactor/Gaming.sh;

if [ "$(file_getprop /tmp/anykernel/anykernel.sh do.cleanup)" == 1 ]; then
	rm -rf /tmp/anykernel;
fi;



umount /system;
umount /data;
ui_print "** Kernel Flashed, Please Reboot **";
